// Mocks generated by Mockito 5.0.17 from annotations
// in currency_app/test/views/convert_currencies_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:currency_app/domain/entities/conversion.dart' as _i2;
import 'package:currency_app/domain/entities/currency.dart' as _i5;
import 'package:currency_app/domain/usecases/convert_currencies_use_case.dart'
    as _i3;
import 'package:currency_app/domain/usecases/save_convert_response_use_case.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeConversion_0 extends _i1.Fake implements _i2.Conversion {}

/// A class which mocks [ConvertCurrenciesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockConvertCurrenciesUseCase extends _i1.Mock
    implements _i3.ConvertCurrenciesUseCase {
  MockConvertCurrenciesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Conversion> call(
          {double? amount, _i5.Currency? from, _i5.Currency? to}) =>
      (super.noSuchMethod(
          Invocation.method(#call, [], {#amount: amount, #from: from, #to: to}),
          returnValue:
              Future<_i2.Conversion>.value(_FakeConversion_0())) as _i4
          .Future<_i2.Conversion>);
}

/// A class which mocks [SaveConvertResponseUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveConvertResponseUseCase extends _i1.Mock
    implements _i6.SaveConvertResponseUseCase {
  MockSaveConvertResponseUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> call(_i2.Conversion? conversion) =>
      (super.noSuchMethod(Invocation.method(#call, [conversion]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
