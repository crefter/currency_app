// Mocks generated by Mockito 5.0.17 from annotations
// in currency_app/test/data/datasources/convert_local_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:currency_app/data/api/convert_api.dart' as _i5;
import 'package:currency_app/data/datasource/local/convert_local_data_source.dart'
    as _i2;
import 'package:currency_app/data/dto/convert_response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ConvertLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockConvertLocalDataSource extends _i1.Mock
    implements _i2.ConvertLocalDataSource {
  MockConvertLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ConvertResponse?> getResponse(
          {double? amount, String? from, String? to, _i5.Output? output}) =>
      (super.noSuchMethod(
              Invocation.method(#getResponse, [],
                  {#amount: amount, #from: from, #to: to, #output: output}),
              returnValue: Future<_i4.ConvertResponse?>.value())
          as _i3.Future<_i4.ConvertResponse?>);
  @override
  _i3.Future<void> save(_i4.ConvertResponse? response) =>
      (super.noSuchMethod(Invocation.method(#save, [response]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
